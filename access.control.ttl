@prefix acl:    <http://www.w3.org/ns/auth/acl#> .
@prefix aifb:   <http://aifb.example.org/> .
@prefix sh:     <http://www.w3.org/ns/shacl#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix cred:   <https://www.w3.org/2018/credentials#> .
@prefix ex:     <https://example.org/examples#> .
@prefix citiz:  <https://w3id.org/citizenship#> .
@prefix vdl:    <https://w3id.org/vdl#> .
@prefix vacc:   <https://w3id.org/vaccination#> .

aifb:resource_r1_rule1
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:BachelorScienceDegreeCredentialShape ;
    aifb:requiredCredential aifb:BulgarianResidentCredentialShape ;
    aifb:requiredCredential aifb:VasilPapanchevPersonCredentialShape ;
    aifb:requiredCredential aifb:GermanDriverLicenseCredentialShape ;
    aifb:requiredCredential aifb:CovidVaccinationCredentialShape .

aifb:resource_r2_rule1
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/resources/r2> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:BachelorArtsDegreeCredentialShape ;
    aifb:requiredCredential aifb:GermanResidentCredentialShape ;
    aifb:requiredCredential aifb:WassilPapantschewPersonCredentialShape ;
    aifb:requiredCredential aifb:GermanDriverLicenseCredentialShape ;
    aifb:requiredCredential aifb:CovidVaccinationCredentialShape .

aifb:resource_requires_degree_science
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/degree_science/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:BachelorScienceDegreeCredentialShape .

aifb:resource_requires_degree_arts
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/degree_arts/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:BachelorArtsDegreeCredentialShape  .

aifb:resource_requires_residence_bg
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/bulgarians/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:BulgarianResidentCredentialShape .

aifb:resource_requires_residence_de
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/germans/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:GermanResidentCredentialShape .

aifb:resource_requires_person_vasil
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/vasil/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:VasilPapanchevPersonCredentialShape .

aifb:resource_requires_person_wassil
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/wassil/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:WassilPapantschewPersonCredentialShape .

aifb:resource_requires_person_alice
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/alice/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:AlicePersonCredentialShape .

aifb:resource_requires_driver
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/drivers/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:GermanDriverLicenseCredentialShape .

aifb:resource_requires_vaccine
    a                       acl:Authorization ;
    acl:accessTo            <http://aifb.example.org/vaccinated/resources/r1> ;
    acl:agent               acl:AuthenticatedAgent ;
    acl:mode                acl:Read ;
    aifb:requiredCredential aifb:CovidVaccinationCredentialShape .

aifb:BachelorScienceDegreeCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential of type: https://example.org/examples#UniversityDegreeCredential
    sh:class       ex:UniversityDegreeCredential ;
    # Accepted issuers: ethr_did_1 and indy_did_1 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x0325d091902e468755694b1323dd63da52d05238384f0bf93b0e30f6dc5bc641d7>
                               <did:indy:local:YY81GvjZpA9yu9bv3co6tZ>
                               <did:web:papanchev.solidweb.org:dids:university-issuer> ) ; ] ;
    # Bachelor of Science Degree
    sh:property    [ sh:path  ( cred:credentialSubject ex:degree ) ;
                     sh:class ex:BachelorDegree ; ] ;
    sh:property    [ sh:path     ( cred:credentialSubject ex:degree schema:name ) ;
                     sh:hasValue "Bachelor of Science"^^rdf:HTML ; ] .

aifb:BachelorArtsDegreeCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential of type: https://example.org/examples#UniversityDegreeCredential
    sh:class       ex:UniversityDegreeCredential ;
    # Accepted issuers: ethr_did_1 and indy_did_1 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x0325d091902e468755694b1323dd63da52d05238384f0bf93b0e30f6dc5bc641d7>
                               <did:indy:local:YY81GvjZpA9yu9bv3co6tZ>
                               <did:web:papanchev.solidweb.org:dids:university-issuer> ) ; ] ;
    # Bachelor of Arts Degree
    sh:property    [ sh:path  ( cred:credentialSubject ex:degree ) ;
                     sh:class ex:BachelorDegree ; ] ;
    sh:property    [ sh:path     ( cred:credentialSubject ex:degree schema:name ) ;
                     sh:hasValue "Bachelor of Arts"^^rdf:HTML ; ] .

aifb:BulgarianResidentCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential type: https://w3id.org/citizenship#PermanentResidentCard
    sh:class       citiz:PermanentResidentCard ;
    # Accepted issuers: ethr_did_2 and indy_did_2 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x0361c0c20eb8a1d4ab659faa218a23b93bf59f0b4eed4d1d3cd929af3ba977f2c6>
                               <did:indy:local:UN9Nk7zDndkLP2VgFfyacA>
                               <did:web:papanchev.solidweb.org:dids:residence-issuer> ) ; ] ;
    # BirthCountry Bulgaria
    sh:property    [ sh:path     ( cred:credentialSubject citiz:birthCountry ) ;
                     sh:hasValue "Bulgaria" ; ] .

aifb:GermanResidentCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential type: https://w3id.org/citizenship#PermanentResidentCard
    sh:class       citiz:PermanentResidentCard ;
    # Accepted issuers: ethr_did_2 and indy_did_2 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x0361c0c20eb8a1d4ab659faa218a23b93bf59f0b4eed4d1d3cd929af3ba977f2c6>
                               <did:indy:local:UN9Nk7zDndkLP2VgFfyacA>
                               <did:web:papanchev.solidweb.org:dids:residence-issuer> ) ; ] ;
    # BirthCountry Bulgaria
    sh:property    [ sh:path     ( cred:credentialSubject citiz:birthCountry ) ;
                     sh:hasValue "Germany" ; ] .

aifb:VasilPapanchevPersonCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential type: https://w3id.org/citizenship#PermanentResidentCard
    sh:class       citiz:PermanentResidentCard ;
    # Accepted issuers: ethr_did_2 and indy_did_2 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x0361c0c20eb8a1d4ab659faa218a23b93bf59f0b4eed4d1d3cd929af3ba977f2c6>
                               <did:indy:local:UN9Nk7zDndkLP2VgFfyacA>
                               <did:web:papanchev.solidweb.org:dids:residence-issuer> ) ; ] ;
    # givenName=Vasil familyName=Papanchev
    sh:property    [ sh:path     ( cred:credentialSubject schema:givenName ) ;
                     sh:hasValue "Vasil" ; ] ;
    sh:property    [ sh:path     ( cred:credentialSubject schema:familyName ) ;
                     sh:hasValue "Papanchev" ; ] .

aifb:WassilPapantschewPersonCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential type: https://w3id.org/citizenship#PermanentResidentCard
    sh:class       citiz:PermanentResidentCard ;
    # Accepted issuers: ethr_did_2 and indy_did_2 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x0361c0c20eb8a1d4ab659faa218a23b93bf59f0b4eed4d1d3cd929af3ba977f2c6>
                               <did:indy:local:UN9Nk7zDndkLP2VgFfyacA>
                               <did:web:papanchev.solidweb.org:dids:residence-issuer> ) ; ] ;
    # givenName=Vasil familyName=Papanchev
    sh:property    [ sh:path     ( cred:credentialSubject schema:givenName ) ;
                     sh:hasValue "Wassil" ; ] ;
    sh:property    [ sh:path     ( cred:credentialSubject schema:familyName ) ;
                     sh:hasValue "Papantschew" ; ] .

aifb:AlicePersonCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential type: https://w3id.org/citizenship#PermanentResidentCard
    sh:class       citiz:PermanentResidentCard ;
    # Accepted issuers: ethr_did_2 and indy_did_2 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x0361c0c20eb8a1d4ab659faa218a23b93bf59f0b4eed4d1d3cd929af3ba977f2c6>
                               <did:indy:local:UN9Nk7zDndkLP2VgFfyacA>
                               <did:web:papanchev.solidweb.org:dids:residence-issuer> ) ; ] ;
    # givenName=Vasil familyName=Papanchev
    sh:property    [ sh:path     ( cred:credentialSubject schema:givenName ) ;
                     sh:hasValue "Alice" ; ] ;
    sh:property    [ sh:path     ( cred:credentialSubject schema:familyName ) ;
                     sh:hasValue "Papancheva" ; ] .

# Do not use: the https://w3id.org/vdl context is missing
aifb:GermanDriverLicenseCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential type: https://w3id.org/vdl#Iso18013DriversLicense
    sh:class       vdl:Iso18013DriversLicense ;
    # Accepted issuers: ethr_did_3 and indy_did_3
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x02bb763916f0a4305da3c21b16b5513afb23519b6cc1c12ebe36e67b0ae3d142db>
                               <did:indy:local:SNZU66cRtXTrrdF94WHRLR> ) ; ] ;
    # Issuing country: DE (Deutschland)
    sh:property    [ sh:path  ( cred:credentialSubject vdl:license ) ;
                     sh:class vdl:Iso18013DriversLicense ; ] ;
    sh:property    [ sh:path     ( cred:credentialSubject vdl:license vdl:issuing_country ) ;
                     sh:hasValue "DE" ; ] .

aifb:CovidVaccinationCredentialShape
    a              sh:NodeShape ;
    sh:targetClass cred:VerifiableCredential ;
    # Credential type: https://w3id.org/vaccination#VaccinationCertificate
    sh:class       vacc:VaccinationCertificate ;
    # Accepted issuers: ethr_did_4 and indy_did_4 and the appropriate WebDID issuer
    sh:property    [ sh:path cred:issuer ;
                     sh:in   ( <did:ethr:0x3:0x032ab0578c8f89cee229b5f9ba1e7c10e7b1ae80b3b878ebc6a6719c08919159f1>
                               <did:indy:local:JU2z7ab1eewNnFbEstrbef>
                               <did:web:papanchev.solidweb.org:dids:vaccination-issuer> ) ; ] ;
    # Credential Subject Type = Vaccination Event
    sh:property    [ sh:path  cred:credentialSubject ;
                     sh:class vacc:VaccinationEvent ; ] ;
    # Accept Vaccines for Covid-19 (atcCode=J07BX03) and only the appropriate Vaccine Products
    sh:property    [ sh:path     ( cred:credentialSubject vacc:VaccineEventVaccine vacc:disease ) ;
                     sh:hasValue "COVID-19" ; ] ;
    sh:property    [ sh:path     ( cred:credentialSubject vacc:VaccineEventVaccine vacc:atc-code ) ;
                     sh:hasValue "J07BX03" ; ] ;
    sh:property    [ sh:path ( cred:credentialSubject vacc:VaccineEventVaccine vacc:medicinalProductName ) ;
                     sh:in   ( "COVID-19 Vaccine Janssen"
                               "NVXCoV2373"
                               "COVID-19 Vaccine Moderna"
                               "COVID-19 Vaccine AstraZeneca" ) ; ] .
